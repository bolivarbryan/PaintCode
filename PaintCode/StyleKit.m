//
//  StyleKit.m
//  ProjectName
//
//  Created by AuthorName on 10/28/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKit.h"


@implementation StyleKit

#pragma mark Cache

static UIImage* _imageOfDragonBall = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawCanvas1;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.176 green: 0.283 blue: 0.511 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(101.5, 24.5)];
    [bezierPath addCurveToPoint: CGPointMake(169.5, 52.5) controlPoint1: CGPointMake(104.5, 50.5) controlPoint2: CGPointMake(169.5, 52.5)];
    [bezierPath addLineToPoint: CGPointMake(137.5, 88.5)];
    [bezierPath addLineToPoint: CGPointMake(114.5, 71.5)];
    [bezierPath addLineToPoint: CGPointMake(80.5, 76.5)];
    [bezierPath addLineToPoint: CGPointMake(42.5, 59.5)];
    [bezierPath addLineToPoint: CGPointMake(58.5, 24.5)];
    [bezierPath addCurveToPoint: CGPointMake(101.5, 24.5) controlPoint1: CGPointMake(58.5, 24.5) controlPoint2: CGPointMake(98.5, -1.5)];
    [bezierPath closePath];
    [color setFill];
    [bezierPath fill];
    [UIColor.blackColor setStroke];
    bezierPath.lineWidth = 1.5;
    [bezierPath stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 45.5, 16, 11)];
    [color2 setFill];
    [ovalPath fill];
    [UIColor.blackColor setStroke];
    ovalPath.lineWidth = 1;
    [ovalPath stroke];
}

+ (void)drawDragonBall;
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 1 green: 0.728 blue: 0.173 alpha: 1];
    UIColor* color4 = [UIColor colorWithRed: 0.833 green: 0.061 blue: 0.061 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(28, 36, 134, 126)];
    [color3 setFill];
    [ovalPath fill];


    //// Star Drawing
    UIBezierPath* starPath = UIBezierPath.bezierPath;
    [starPath moveToPoint: CGPointMake(95, 89)];
    [starPath addLineToPoint: CGPointMake(98.53, 94.15)];
    [starPath addLineToPoint: CGPointMake(104.51, 95.91)];
    [starPath addLineToPoint: CGPointMake(100.71, 100.85)];
    [starPath addLineToPoint: CGPointMake(100.88, 107.09)];
    [starPath addLineToPoint: CGPointMake(95, 105)];
    [starPath addLineToPoint: CGPointMake(89.12, 107.09)];
    [starPath addLineToPoint: CGPointMake(89.29, 100.85)];
    [starPath addLineToPoint: CGPointMake(85.49, 95.91)];
    [starPath addLineToPoint: CGPointMake(91.47, 94.15)];
    [starPath closePath];
    [color4 setFill];
    [starPath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfDragonBall;
{
    if (_imageOfDragonBall)
        return _imageOfDragonBall;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(200, 200), NO, 0.0f);
    [StyleKit drawDragonBall];
    _imageOfDragonBall = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDragonBall;
}

#pragma mark Customization Infrastructure

- (void)setDragonBallTargets: (NSArray*)dragonBallTargets
{
    _dragonBallTargets = dragonBallTargets;

    for (id target in self.dragonBallTargets)
        [target setImage: StyleKit.imageOfDragonBall];
}


@end
